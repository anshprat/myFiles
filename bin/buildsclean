#!/bin/bash
# set -xe
##
# function reserved_builds gid returnvar
# The first arg is the sheet id to use. Can be found from the gid param of the
# url of the google sheet
# The second arg is the function return variable name
# http://www.linuxjournal.com/content/return-values-bash-functions
##
function reserved_builds {
    gid=$1
    sheetid="1V75IDtU8GWH2sX5G0dKQDH6K2RX5RZaoJQX0MoIEW4g"
    local  __resultvar=$2
    url="https://docs.google.com/spreadsheets/d/${sheetid}/export?gid=${gid}&format=csv"
    local result=`curl -s $url|cut -f 1 -d ','|grep ^[0-9]|paste -sd'|'`
    eval $__resultvar="'$result'"
}

jenkins_server="http://jiocloud.rustedhalo.com:8080"
function check_build_status {
    build_number=$1
    if [[ $build_number == *"pkg"* ]]
    then
        # Its a pkg-test build
        job_name="puppet_rjil_pkg_test"
        build_number=`echo $1|cut -b 10-`
    elif [[ $build_number == *"test"* ]]
    then
        #Its an AT env
        job_name=pipeline-at-deploy
        build_number=`echo $1|cut -b 5-`
    elif [[ $build_number == *"cloud"* ]]
    then
        #Its an OC/UC env
        job_name=puppet-rjil-gate-`echo $1|cut -f 1 -d '-'`
        build_number=`echo $1|cut -f 2 -d '-'`
    else
        # Its a gate
        job_name='puppet-rjil-gate'
    fi
    echo "Checking build $i"
    build_url="$jenkins_server/job/${job_name}/${build_number}/api/json"
    echo $build_url
    res_404=`curl -sI ${build_url}|grep HTTP|grep 200`
    res_rv=$?
    if [ ${res_rv} -eq 1 ]
    then
        # we get exit 1 if build history is delete (example in AT).
        delete_build $1 "BUILD_INFO_DELETED"
    else
        build_running_status=`curl -s ${build_url}|jshon -e result`
        if [[ "$build_running_status" == *"SUCCESS"* ]]
		then
			# If its successful and there are no tempest running, then delete
			# As we don't have an easy way of finding out the downstream job id
			# Also, there is a possibility of a loop where gate is not deleted
			# Will see to it once we get there
			if [[ "${job_name}" -eq 'puppet-rjil-gate' ]]
			then
				#Find ongoing tempest builds and their upstream.
				lastBuildTempest=`curl -s http://jiocloud.rustedhalo.com:8080/job/puppet-rjil-gate-tempest/api/json|jshon -e lastBuild -e number`
				lastCompletedBuildTempest=`curl -s http://jiocloud.rustedhalo.com:8080/job/puppet-rjil-gate-tempest/api/json|jshon -e lastCompletedBuild -e number`
				if [[ "${lastCompletedBuildTempest}" -eq "${lastBuildTempest}" ]]
				then
					# No active running tempest, delete build
					delete_build $1 $build_running_status
				else
					# Else check the ongoing tempest runs
					let countOngoingTempest=${lastBuildTempest}-${lastCompletedBuildTempest}
					for c in `seq 0 ${countOngoingTempest}`
					do
						let tempestjobid=${lastBuildTempest}-${c}
						upstreamBuild=`curl -s http://jiocloud.rustedhalo.com:8080/job/puppet-rjil-gate-tempest/12/api/json|jshon -e actions -e 1 -e causes -e 1 -e upstreamBuild`
						if [[ "${upstreamBuild}" -eq "${build_number}" ]]
						then
							# This is the downstream tempest for our gate and in progress
							# We can check again if its still on, but its ok, let it sit for one more hour
							delete_build $1 'null'
						fi
					done
				fi
			fi
		else
			delete_build $1 $build_running_status
		fi
    fi
}

function delete_build {
    build_number=$1
    result=$2
    if [ $result != "null" ]
    then
        echo "Build $build_number status: $result"
        echo -n "Deleting build $build_number in  "
        for t in `seq 5 -1 0`
        do
            echo -ne "\b${t}"
            sleep 1
        done
        echo
        if [[ $build_number == *"pkg"* ]]
        then
            # Its a pkg-test build
	    # build_number is test_${build_num}"
            resource=" testjenkins-puppet_rjil_${build_number}"
        elif [[ $build_number == *"test"* ]]
        then
            #Its an AT env
            resource=" ${build_number}"
        elif [[ $build_number == *"undercloud"* ]]
        then
            #Its an UC env
            resource=`echo  ${build_number}|cut -f 2 -d '-'`
            del_url="$jenkins_server/job/puppet-rjil-gate-undercloud-delete/buildWithParameters?token=4c8d10dff41e8c6c8096f41416705b50&jobid=${resource}&cause=buildcleanupscript"
            #echo $del_url
            curl "${del_url}"
            return $?
        else
            # Its a gate
            resource=" testjenkins-puppet-rjil-gate-${build_number}"
        fi
        python -m jiocloud.apply_resources delete $resource || echo "[ERROR] Delete failed"
    else
        echo "Build $i is still building, not deleting"
    fi

}

echo "Checking gate/OC builds"
reserved_builds 0 reserved
for i in `nova list|grep testjenkins-puppet-rjil-gate |awk '{print $4}'|cut -f 5- -d '-'|sort|uniq|grep -vE "$reserved" || true`
do
check_build_status $i
done

echo "Checking AT environments"
reserved_builds 748670303 reserved
for i in `nova list|grep _test |grep -v jenkins|awk '{print $4}'|cut -f 2 -d '_'|sort -u|grep [0-9]|grep -vE "$reserved|external"`
do
check_build_status $i
done

echo "Checking gate/OC builds"
reserved_builds 0 reserved
for i in `nova list|grep testjenkins-puppet-rjil-gate |awk '{print $4}'|cut -f 5- -d '-'|sort|uniq|grep -vE "$reserved" || true`
do
check_build_status $i
done

echo "Checking pkg-test builds"
reserved_builds 768834840 reserved
for i in `nova list|grep pkg_test |awk '{print $4}'|cut -f 4- -d '_'|sort -u|grep -vE "$reserved"`
do
check_build_status $i
done

echo "Checking pkg-test builds"
reserved_builds 768834840 reserved
for i in `nova list|grep pkg_test |awk '{print $4}'|cut -f 4- -d '_'|sort -u|grep -vE "$reserved"`
do
check_build_status $i
done
